
oszi-tests.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000001a8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000134  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000003  00800100  00800100  000001a8  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000001a8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001d8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000040  00000000  00000000  00000218  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000070f  00000000  00000000  00000258  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000065c  00000000  00000000  00000967  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000028c  00000000  00000000  00000fc3  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000bc  00000000  00000000  00001250  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000387  00000000  00000000  0000130c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000107  00000000  00000000  00001693  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000030  00000000  00000000  0000179a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__vector_11>
  30:	0c 94 88 00 	jmp	0x110	; 0x110 <__vector_12>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a3 30       	cpi	r26, 0x03	; 3
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 97 00 	call	0x12e	; 0x12e <main>
  88:	0c 94 98 00 	jmp	0x130	; 0x130 <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <clock_inc>:
	CONFIG_BYTE(TIFR1 , BIT(OCF1A) | BIT(OCF1B),0);
	CONFIG_BYTE(TIMSK1 , BIT(OCIE1A), 0);
	OCR1A = 5000;      // set count to 1500 us - 90 degree
	OCR1B = 1500;      // set count to 1500 us - 90 degree
	TCNT1 = 0;         // reset timer
	sei();
  90:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <precount>
  94:	8f 5f       	subi	r24, 0xFF	; 255
  96:	19 f0       	breq	.+6      	; 0x9e <clock_inc+0xe>
  98:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <precount>
  9c:	08 95       	ret
  9e:	88 e3       	ldi	r24, 0x38	; 56
  a0:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <precount>
  a4:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
  a8:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
  ac:	01 96       	adiw	r24, 0x01	; 1
  ae:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <_edata+0x1>
  b2:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
  b6:	80 ff       	sbrs	r24, 0
  b8:	03 c0       	rjmp	.+6      	; 0xc0 <clock_inc+0x30>
  ba:	80 e2       	ldi	r24, 0x20	; 32
  bc:	85 b9       	out	0x05, r24	; 5
  be:	08 95       	ret
  c0:	15 b8       	out	0x05, r1	; 5
  c2:	08 95       	ret

000000c4 <__vector_11>:
  c4:	1f 92       	push	r1
  c6:	0f 92       	push	r0
  c8:	0f b6       	in	r0, 0x3f	; 63
  ca:	0f 92       	push	r0
  cc:	11 24       	eor	r1, r1
  ce:	2f 93       	push	r18
  d0:	3f 93       	push	r19
  d2:	4f 93       	push	r20
  d4:	5f 93       	push	r21
  d6:	6f 93       	push	r22
  d8:	7f 93       	push	r23
  da:	8f 93       	push	r24
  dc:	9f 93       	push	r25
  de:	af 93       	push	r26
  e0:	bf 93       	push	r27
  e2:	ef 93       	push	r30
  e4:	ff 93       	push	r31
  e6:	80 e2       	ldi	r24, 0x20	; 32
  e8:	85 b9       	out	0x05, r24	; 5
  ea:	0e 94 48 00 	call	0x90	; 0x90 <clock_inc>
  ee:	ff 91       	pop	r31
  f0:	ef 91       	pop	r30
  f2:	bf 91       	pop	r27
  f4:	af 91       	pop	r26
  f6:	9f 91       	pop	r25
  f8:	8f 91       	pop	r24
  fa:	7f 91       	pop	r23
  fc:	6f 91       	pop	r22
  fe:	5f 91       	pop	r21
 100:	4f 91       	pop	r20
 102:	3f 91       	pop	r19
 104:	2f 91       	pop	r18
 106:	0f 90       	pop	r0
 108:	0f be       	out	0x3f, r0	; 63
 10a:	0f 90       	pop	r0
 10c:	1f 90       	pop	r1
 10e:	18 95       	reti

00000110 <__vector_12>:
 110:	1f 92       	push	r1
 112:	0f 92       	push	r0
 114:	0f b6       	in	r0, 0x3f	; 63
 116:	0f 92       	push	r0
 118:	11 24       	eor	r1, r1
 11a:	8f 93       	push	r24
 11c:	88 b1       	in	r24, 0x08	; 8
 11e:	80 7f       	andi	r24, 0xF0	; 240
 120:	88 b9       	out	0x08, r24	; 8
 122:	8f 91       	pop	r24
 124:	0f 90       	pop	r0
 126:	0f be       	out	0x3f, r0	; 63
 128:	0f 90       	pop	r0
 12a:	1f 90       	pop	r1
 12c:	18 95       	reti

0000012e <main>:
}


int main(void)
{
 12e:	ff cf       	rjmp	.-2      	; 0x12e <main>

00000130 <_exit>:
 130:	f8 94       	cli

00000132 <__stop_program>:
 132:	ff cf       	rjmp	.-2      	; 0x132 <__stop_program>
